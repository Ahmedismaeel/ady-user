name: "Build & Release"

on:
  push:
    branches:
      - main

jobs:  # Telling what jobs we need to happen
  build:      # Specify the building name and machine
    name: Build & Release  # you can name the build whatever you want
    runs-on: macos-latest # here we selected macos-latest to be able to get ios build

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'

      #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      #5 Get Version from pubspec.yaml
      - name: Get Version
        id: get_version
        run: echo "VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_ENV

      #6 Build APK
      - name: Build APK
        run: flutter build apk --release

      #7 Rename APK with Version
      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/ady_user_${{ env.VERSION }}.apk

      #8 Upload APK
      - name: Upload APK 
        uses: actions/upload-artifact@v4
        with:
          name: ady_user_${{ env.VERSION }}
          path: build/app/outputs/flutter-apk/ady_user_${{ env.VERSION }}.apk

      #9 Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      #10 Upload APK to Release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/ady_user_${{ env.VERSION }}.apk
          asset_name: ady_user_${{ env.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

      #11 Send Email with Download Link
      - name: Send Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Build Completed
          body: The build has been completed successfully. Download the APK from the following link => https://github.com/${{ github.repository }}/releases/download/v${{ env.VERSION }}/ady_user_${{ env.VERSION }}.apk
          to: foxahmed71@gmail.com
          from: ahmed.alsabonabi@gmail.com

  notify_failure:
    name: Notify Failure
    runs-on: macos-latest
    needs: build
    if: failure()
    steps:
      - name: Send Failure Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Build Failed
          body: The build has failed. Please check the logs for more details.
          to: foxahmed71@gmail.com
          from: ahmed.alsabonabi@gmail.com
